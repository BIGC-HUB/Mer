[
  "# 萧瓜 HTML CSS Javascript",
  "标签：笔记\n[JavaScript](https://www.zybuluo.com/iwangyang/note/519509) / [Python](https://www.zybuluo.com/iwangyang/note/460072) / [实战笔记](https://www.zybuluo.com/iwangyang/note/559150)",
  "\n\n|简历 |笔记 |作品 |\n|:---:|:---:|:---:|\n\n",
  "### <i class=\"icon-asterisk icon-3x\"></i> ——[金光闪闪 黄埔一期](https://bigc.cc)\n\n### 　掏粪工具箱\n\n|HTML|CSS|Javascript|\n|:---:|:---:|:---:|\n| 0 |1.5|8.5|\n|[RGB](http://www.sioe.cn/yingyong/yanse-rgb-16/)|[cssreference](http://cssreference.io/)|[JsBeautifier](http://jsbeautifier.org/)|\n|[PXtoEM](http://pxtoem.com/)|[caniuse](http://caniuse.com/)||\n||[animate](https://daneden.github.io/animate.css/)||\n||[css3developer](http://www.css3developer.com/css3generator/gradient-css.html)||\n||[css3.me](http://www.css3.me/)||\n||[css2sass](http://css2sass.w3ci.com/)||\n||[多边形css](http://bennettfeely.com/clippy/)||",
  "### 　库\n\n|名称|中文|\n|:---:|:---:|\n|particles|分子粒子库|\n|pagefull|全屏滚动库|\n|jQuery.typer|文字特效|\n",
  "# [CSS](http://www.w3school.com.cn/cssref/index.asp)\n\n|定义|优先级 从高到低|\n|:---:|---:|\n|内联|禁止使用 < h1 `~~style=\"color: red;\"~~` > Hello World < /h1 >|\n|中联|< style > `h1{ color: red; }` < /style >|\n|外联|< link rel=\"stylesheet\" href=\"`tag.css`\" >|\n",
  "### 常用\n\n```css\nbody {\n    background: lightblue;          /* 背景色   */\n    margin:0px;                     /* 外边距   */\n    border:0px;                     /* 边框     */\n    border-style: solid;            /* 边框样式 */\n    padding:0px;                    /* 内边距   */\n    font-family: Microsoft YaHei;   /* 字体     */\n    font-size: 22px;                /* 字体大小 */\n    text-align: center;             /* 对齐     */\n}\n```\n```css\n.tanChuang {\n    z-index: 100;                   /* 顶层     */\n    position: fixed;                /* 定位     */\n    top: 0px;                       /* 顶部     */\n    left: 0px;                      /* 左部     */\n    width: 100%;\n    height: 100%;\n    opacity: 0.96;                  /* 透明度   */\n    background: black;\n    color: white;\n}\n.tanCenter {\n    position:relative;\n    top: 50%;\n    transform: translateY(-61.8%);  /* Y轴距离  */\n}\n```\n```\n// 内联元素 居中\n// 区块元素 居中 margin: 0px auto;\n```\n```css\n.circle {\n    width:  50px;\n    height: 50px;\n    border-radius: 50%;             /* 圆角     */\n}\n```",
  "### [伪类](http://www.w3school.com.cn/css/css_pseudo_classes.asp)\n|:link|未访问|:hover|悬停|\n|:---:|:---:|:---:|:---:|\n|**:visited**|**已访问**|**:active**|**选定**|\n```\na:link   { color: white; text-decoration: none; } /*去下划线*/\na:visited{ color: black; }\na:hover  { color: red; cursor: pointer; } /*鼠标样式*/\na:active { color: lightblue; }\n\na.class:visited {color: white;}    /* 独立伪类 */\n```",
  "### [盒模型](http://www.w3school.com.cn/css/css_boxmodel.asp)\n\n|BOX |单位|描述|\n|:---|:---|:---|\n|margin:|0px;|外边距|\n|border:|0px;|边框|\n|padding:|0px;|内边距|\n|width:|80%;|宽|\n|height:|100%;|高|",
  "### 定位 [position](http://www.w3school.com.cn/cssref/pr_class_position.asp)\n|值  |描述|\n|:---|:---|\n|static  |默认 `static`|\n|relative|~~相对定位~~ 偏移|\n|absolute|相对 非`static`父元素 绝对定位|\n|fixed\t |相对 浏览器 绝对定位|",
  "### 显示 [display](http://www.w3school.com.cn/cssref/pr_class_display.asp)\n|值|描述|\n|:---|:---|\n|none|不显示|\n|block|区块元素 独占一行|\n|inline|内联元素 无法设置宽高|\n|inline-block|内联元素 可以设置宽高|",
  "### [响应式布局](http://www.w3cschool.cn/css/css-rwd-mediaqueries.html)\n\n```css\n/* 小于 500px */\n@media only screen and (max-width: 500px) {\n    body {\n        background-color: red;\n    }\n}\n/* 大于 600px */\n@media only screen and (min-width: 600px) {\n    body {\n        background-color: yellow;\n    }\n}\n```\n",
  "# HTML\n\n### 选择器\n\n> 举例：< `h1` id=\"`id-h1`\" class=\"`class-h1`\"> 大校 < /h1 >\n\n|元素 选择器|符号|优先级 从高到低|\n|:---:|:---:|---:|\n|!important|!|h1 { color: red `!important`; }|\n|id|#|`#id-h1` { color: red; }|\n|class|.|`.class-h1` { color: red; }|\n|标签|无|`h1` { color: red; }|",
  "### 编码\n\n|ASCII - Unicode 编码|说明|\n|:---:|:---:|\n|`'Aa'`.charCodeAt( `0` ) === 65|`0` 下标|\n|String.fromCharCode( `65` ) === \"A\"|`65` ASCII码|\n|( `10` ).toString( `2` ) === \"1010\"|进制转换|\n\n|[字符集](http://www.w3school.com.cn/tags/html_ref_entities.html)|常用|\n|:---:|:---:|\n|`&amp;`| &|\n|`&copy;`|©|\n|`&reg;`|®|",
  "# JavaScript\n\n|定义 |插入 < /body > 之前 顺序执行|\n|:---:|---:|\n|中联|< script >`log('Hello World!')`< /script >|\n|外联|< script src=\"`Echo.js`\" charset=\"utf-8\">< /script >|",
  "### 集合 Set\n```js\nnew Set(Array)\n\n// has( ) 的速度快过 indexOf( )\n\n// 创建\n\nnew Set()\n\n// 长度\n\nset.size\n\n// 查询\n\nset.has() set.keys()、set.values()、 set.entries()\n\n// 操作,返回集合本身\n\n.add() .delete() .clear() .toJSON() //返回数组\n\n// 迭代器\n\nfor of //in 没有效果\n```",
  "### 数组 [**Array** ](http://www.w3school.com.cn/jsref/jsref_obj_array.asp)\n\n|属性|秒懂释义|相当于|\n|:---|  :---  | :--- |\n|**slice( )**|复制 切片并返回|支持负索引\n|**splice( )**|删除 切片并返回|支持负索引\n|[concat](http://www.w3school.com.cn/jsref/jsref_concat_array.asp)( array )|连接 数组||\n|length|返回 长度|len( )|\n|push( )|末尾 添加一个元素|.append( )|\n|join( str )|返回 字符串 str 分隔||\n|reverse( )|翻转 所有元素||\n",
  "### 字符串 [**Str**](http://www.w3school.com.cn/jsref/jsref_obj_string.asp)\n\n```javascript\nvar name = '大海' //格式化字符串\nconsole.log( `尊敬的${name}，你好！` ) //使用反引号 ``\n\n'Man'.split('').reverse().join('')   //翻转字符串\n```\n\n|属性|说明|\n|:---|:---|\n|**slice( )**|返回 切片|\n|includes( str )|检查 是否包含 str 返回 bool|\n|split( str )|以 str 分割字符串 返回 array|\n|toLowerCase()|字母转小写|\n|toUpperCase()|字母转大写|\n|indexOf( str )|查找 是否包含 str 返回 下标|\n|replace( pattern, str )| 替换 pattern 为 str ；`/img`全部替换|\n|search( [pattern](#regexp-正则表达式) )|查找 pattern 返回下标 否则返回 -1\n\n|转义符|说明|\n|:---:|:---:|\n|`\\n`|换行|\n|`\\t`|TAB|\n|`\\\\`|反斜杠|\n|`\\'`|单引号|\n|`\\\"`|双引号|",
  "### 字典 **Object**\n> `dict` = { '初中生':6, '高中生':7, '大学生':8 }\n\n|属性|说明|\n|:---|:---|\n| `dict` = { key : 'value', }|创建|\n|`dict` ['小学生'] = 4|      添加|\n|`dict` ['小学生'] = 5|      修改|\n|delete `dict` ['大学生']|   删除|\n|Object.keys( `dict` )|      返回 keys|\n\n### **RegExp** [正则表达式](http://www.w3school.com.cn/jsref/jsref_obj_regexp.asp)\n\n- 语法：/`Pattern`/`Property`\n\n```js\nlet reVal = (data, start, end, not) => {\n    if (not) {\n        not = '[^'+ not +']'\n    } else {\n        not = ''\n    }\n    let re = new RegExp( `${start}${not}([\\\\s\\\\S]+?)${end}`, 'gi' ) // 全局\n    if (typeof data === 'string') {\n        let arr = data.match(re)\n        let result = []\n        if (arr) {\n            for (let i of arr) {\n                let temp = i.split(start)[1].split(end)[0]\n                result.push(temp)\n            }\n            return result\n        }\n    } else if (Array.isArray(data)) {\n        let result = []\n        for (let i of data) {\n            let temp = i.match(re)[0].split(start)[1].split(end)[0]\n            result.push(temp)\n        }\n        return result\n    }\n}\n```\n\n|Property|说明|\n|:---:|:---:|\n|/i|无视大小写|\n|/g|全局匹配|\n|/m|多行匹配 |\n|/img|组合使用|\n\n\n- 常用\n\n|正则表达式|说明|\n|:---:|:---:|\n|/\\w/|所有字母|\n|/\\d/|所有数字|\n|/\\u4E00-\\u9FA5/|中文|\n|/\\u0800-\\u4E00/|日文|\n|/\\uAC00-\\uD7FF/|韩文|\n\n- 编译：**new RegExp**( `Pattern`, `Property` )\n```javascript\nvar name = '大海'\nvar re = new RegExp( `${name}`, 'img' ) //加变量\n```\n",
  "### **Json** 格式\n```javascript\nvar x = JSON.stringify( [1,2,3] ) //编译\n\nvar y = JSON.parse( x )           //读取\n```",
  "### 循环\n\n```javascript\nfor (var i = 0; i < iterable.length; i++) {\n    iterable[i]\n    }\n    //相当于Python for循环\n```\n```javascript\nfor (i of iterable) { i }           // i = 值\nfor (i in iterable) ( iterable[i] } // i = 下标\n```\n```javascript\nvar i = 0\nwhile (i < n) {\n    i+=1\n    }\n    //相当于Python while循环\n```\n",
  "### 逻辑符号\n\n| 与  | 或  | 非  |\n|:---:|:---:|:---:|\n|&&   |\\|\\| |!!  |\n|and  |or   |not  |\n\n> **Cmd Markdown** [简明语法手册](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown)\n",
  "### 闭包\n```javascript\n//什么是私有属性\nvar Bibao = function() {\n    this.attr1 = 1\n    var  attr2 = 2\n    this.getAttr2 = function() {\n        return attr2\n    }\n    this.setAttr2 = function(set) {\n        attr2 = set\n    }\n}\nvar obj = new Bibao()\nconsole.log('这是公有属性：', obj.attr1,\n            '这是私有属性：', obj.attr2)\n            \nconsole.log('利用闭包 get 私有属性：' obj.getAttr2())\nobj.setAttr2(3)\nconsole.log('利用闭包 set 私有属性：' obj.getAttr2())\n```\n\n",
  "# **DOM API**\n- DOM 是 HTML 文件\n- DOM API 是浏览器提供给 JavaScript 操作 html 页面的交互方式\n",
  "### 常用\n```html\n<input id=\"id\" type=\"text\" value=\"Gua\">\n```\n|属性 [（元素 .class #id）](#选择器)|说明|\n|:---|:---:|\n|var `omg` = document.querySelector( `'#id'` )|获取 DOM对象|\n|var `omgValue` = `omg`.getAttribute( `'value'` )|获取 属性值|\n|`omg`.setAttribute( `'value'` , `'Gua'` )|修改 属性值|\n|`omg`.hasAttribute( `'value'` )|查询 是否存在|\n|`omg`.removeAttribute( `'type'` )|删除 某个属性|\n|var `allProperty` = `omg`.attributes|查找 所有属性|\n|`omg`.remove( )|删除 元素|\n|`omg`.**insertAdjacentHTML**( `'beforeend'`, `html` )|插入 HTML|\n\n|insertAdjacentHTML|标签 描述|\n|---|---|\n|beforebegin|开始标记 前|\n|afterbegin |开始标记 后|\n|beforeend  |结束标记 前|\n|afterend   |结束标记 后|\n",
  "### 本地存储 LocalStorage\n\n> 贮藏：localStorage[ `'name'` ] = '大海'\n\n> 取出：localStorage[ `'name'` ]\n\n> 删除：delete localStorage[ `'name'` ]\n\n- 类似于本地 5MB Object 只能存 字符串，使用 Json 转字符串\n",
  "# **Event**\n\n> 事件绑定：\n\n> 区分元素 > 绑定元素 > 触发Event > 操作元素\n",
  "### 事件 \n|var Event = function() {|\n|:---|\n|var `input` = document.querySelector( `\"#id-input\"` )|\n|// 获得 输入框 id-input|\n|var `inputValue` = input[ `'value'` ]|\n|// 获得 value 值|\n|var `notepadCont` = document.querySelector( `\"#id-div-cont\"` )|\n|`html` = \\` `<div> 输入的值：${ inputValue } </div>` \\`|\n|// 获得 包含 value 的 html 代码|\n|`notepad_Cont`.insertAdjacentHTML( 'beforeend', `html` )|\n|// 插入 包含 value 的 html 代码 到 父元素 末尾\n|**}**|\n",
  "### 事件绑定\n\n|说明|\n|:---|---|\n|var `button` = document.querySelector( `\"#id-div-cont\"` )\n|// 获取 元素 或 父元素|\n|`button`.addEventListener( `'click'`, [Event](#事件), false )|\n|// 事件 绑定 或 委托  |\n\n\n|[常用事件](http://www.w3school.com.cn/jsref/jsref_events.asp)|说明|\n|:---|:---:|\n|'focus'|获得 焦点|\n|'blur'|失去 焦点|\n|'click'|单击|\n|'dblclick'|双击|\n|'mouseover'|悬停|\n|'mouseout'|移开|\n|'keydown'|按下 某键|\n",
  "### 事件委托\n\n|var Event = function( event ) { |\n|:---|\n|var target = event.target|\n|// 获取 目标|\n|var `fu` = target.parentElement|\n|// 获取 父元素|\n|if ( target.classList.contains( `'del'` ) ) {|\n|// 监听 事件 del |\n|`fu`.remove( ) }|\n|// 删除 父元素|\n|else if ( target.classList.contains( `'done'` ) ) {|\n|// 监听  事件 done|\n|[ClassOFF](#classoff-开关)( `fu`, `'doneStyle'` ) }\n|// 操作 父元素\n|**}**|\n\n|事件 event 参数|描述|\n|:---|---:|\n|event.target.parentElement|父元素|\n|event.target|元素|\n|event.target.children|子元素|\n|**event.target.parentElement.children**|父子元素|\n",
  "# **Ajax** \n\n- 阿贾克斯中 解决回掉地狱\n",
  "### **Ajax**\n\n```javascript\n// url  必填 请求地址\n// data 必填 null 则为 get\n// func 非必填 回调 \n// sync 非必填 false 则为同步\nvar Ajax = function(url, data, func, sync) {\n    if (sync === undefined) {                   // false 同步\n        sync = true                             // true  异步\n    }\n    if (func === undefined) {\n        func = function(err) {\n            console.log(err)\n        }\n    }\n    var r = new XMLHttpRequest()                // 创建 AJAX 对象\n    r.open('POST', url, sync)                   // 请求方法 网址 同步\n    r.setRequestHeader('Content-Type', 'application/json')\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {               // 完成\n            func(r.response)                    // 注册 响应函数 结果\n        }\n    }\n    if (data) {                                 // POST\n        data = JSON.stringify(data)\n        r.send(data)\n    } else {                                    // GET\n        r.send()\n    }                                           // 发送 请求\n}\n// 阿贾克斯 ? 不存在的\n```",
  "- 前端\n```javascript\nAjax('/load', null, function(data){\n    console.log(data)\n}, false) // 同步\n\nAjax('/save', data) // 异步\n```",
  "- 后端Node.js\n```javascript\n// 同步\nvar data = fs.readFileSync('index.html', 'utf8')\nvar err  = fs.writeFileSync('dududu.txt', data)\n\n// 异步\nfs.readFile('index.html', 'utf8', (err, data) => {\n    if (!err) {\n        console.log(data)\n    }\n})\nfs.writeFile('log.txt', data, (err) => {\n    if (!err) {\n        console.log('写入成功')\n    }\n})\n```",
  "- event.target.**readyState**\n\n|状态|说明|状态|说明|\n|:---:|:---:|:---:|:---:|\n|1|载入|2|载入完成|\n|3|交互|4|交互完成|\n",
  "### **API** 接口封装\n```javascript\nvar AjaxApi = function(){\n    this.baseUrl = 'http://vip.cocode.cc:3000/todo/'\n    this.qq = '616615503'\n}\n// 定义 初始对象\nAjaxApi.prototype.get = function (path, callback) {\n    var url = this.baseUrl + this.qq + path\n    var r = new XMLHttpRequest()       // 创建 AJAX 对象\n    r.open( 'GET', url, true )         // 设置 请求方法 地址\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {      // 完成\n            callback(r.response)       // 回调 函数\n        }\n    }\n    r.send()                           // 发送 请求\n}\nAjaxApi.prototype.post = function (path, data, callback) {\n    var url = this.baseUrl + this.qq + path\n    var r = new XMLHttpRequest( )      // 创建 AJAX 对象\n    r.open( 'POST', url, true )        // 设置 请求方法 地址\n    r.setRequestHeader('Content-Type', 'application/json')\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {      // 完成\n            callback(r.response)       // 注册 响应函数 结果\n        }\n    }\n    var data = { task: data }          // 字符串 转 object\n    var data = JSON.stringify(data)\n    r.send( data )                     // 发送 请求\n}\n// 封装 GET / POST 结束\nAjaxApi.prototype.all = function(callback) {\n    var path = '/all'\n    this.get(path, callback)\n}\nAjaxApi.prototype.add = function(data, callback) {\n    var path = '/add'\n    this.post(path, data, callback)\n}\nAjaxApi.prototype.update = function(data, id, callback) {\n    var path = '/update/' + id\n    this.post(path, data, callback)\n}\nAjaxApi.prototype.delete = function(id, callback) {\n    var path = '/delete/' + id\n    this.get(path, callback)\n}\n// 封装 API 结束\nvar api = new AjaxApi()\nvar callback = function(response) {\n    console.log( JSON.parse(response) )\n}\n// api.all( callback ) // 全部 \n// api.add( '大校', callback ) // 添加 \n// api.update( 'Hasaki', 607, callback ) // 更新 \n// api.delete( 607, callback ) // 删除\n```\n\n> 参数说明　`callback`　回调函数　`data`　字符串　`id`　数字\n",
  "# 定制方法 / 内置函数\n\n### Event 自定义事件触发\n\n```\n// 监听事件 'build'\n$('body').on('build', (e) => {\n    console.log(e)\n})\n\n// 触发事件 冒泡\nvar event = new Event('build', {'bubbles':true})\n$('#menu')[0].dispatchEvent(event)\n```\n",
  "### Cookie\n\n```js\n// Cokie\nvar setCookie = function(name, value, days) {\n    var date = new Date()\n    var str = ''\n    if (days) {\n        date.setDate(date.getDate() + days)\n        str = \";expires=\" + date.toGMTString()\n    } else {\n        str = ''\n    }\n    document.cookie = name + \"=\" + encodeURIComponent(value) + str\n}\nvar getCookie = function(name) {\n    var arr = document.cookie.split('; ')\n    for (var i of arr) {\n        var e = i.split('=')\n        if (e[0] === name) {\n            return e[1]\n        }\n    }\n}\n```",
  "### **textarea** 自适应\n\n```javascript\n    // textarea\n    $('#md').on('focus', 'textarea', function() {\n        let i = this\n        let dif = i.scrollHeight\n        i.value += '\\n'\n        dif = i.scrollHeight - dif\n        let arr = i.value.split('')\n        arr.splice(-1, 1)\n        i.value = arr.join('')\n        i.rows = Math.round(i.scrollHeight / dif)\n        i.dataset.dif = dif\n    })\n    $('#md').on('input', 'textarea', function() {\n        let i = this\n        i.rows = Math.round(i.scrollHeight / i.dataset.dif)\n    })\n\n```",
  "### **delayPost** 延迟请求\n\n```javascript\nvar __delayPost__ = {\n    t: setTimeout('',0),\n    data: '',\n    post: function(sendData) {\n        sendData = {value:sendData}\n        $.ajax({\n            url: '/data/change',\n            type: 'POST',\n            data: sendData,\n            success: function(e) {\n                console.log(e.value)\n            },\n            error: function() {\n                log('error')\n            }\n        })\n    }\n\n}\nvar delayPost = function(data, time) {\n    clearTimeout(__delayPost__.t)\n    __delayPost__.data = data\n    // keyup time 毫秒后请求\n    __delayPost__.t = setTimeout('__delayPost__.post(__delayPost__.data)', time)\n}\n\n```\n\n```javascript\n$('.search-input').on('keyup', function(e) {\n    delayPost(e.target.value, 2000)\n})\n```\n\n",
  "### **removeJsComments** 删除注释\n\n```javascript\nvar removeJsComments = function (str) {\n    // 多行注释\n    str = str.replace(/(?:^|\\n|\\r)\\s*\\/\\*[\\s\\S]*?\\*\\/\\s*(?:\\r|\\n|$)/g, '\\n')\n    // 单行注释\n    for (let i of str.match(/([^:])\\/\\/.*(?:\\r|\\n|$)/g) ) {\n        var re = new RegExp( i.slice(1), 'g' ) //加变量\n        str = str.replace(re, '\\n')\n    }\n    return str\n}\n```",
  "### **strToObj** 去除逗号\n\n```javascript\nvar strToObj = function(str) {\n    var temp\n    str = 'temp = ' + str\n    temp = eval(str)\n    return JSON.stringify(temp)\n}\n```",
  "### **Sort** 数组冒泡排序\n\n```javascript\nvar sort = function(arr) {\n    var i = arr.length\n    var temp\n    while (i > 0) {\n        for (var i2 = 0; i2 < i - 1; i2++) {\n            // .sort 为对象里的数字\n            if (arr[i2].sort > arr[i2 + 1].sort) {\n                temp = arr[i2]\n                arr[i2] = arr[i2 + 1]\n                arr[i2 + 1] = temp\n            }\n        }\n        i--\n    }\n    return arr\n}\n```\n\n替换 **.sort** 即可，如果是数字排序 直接删除\n",
  "### **常用**\n\n|属性|说明|\n|:---|:---|\n|typeof( object )|判断 类型|\n|String( number )|数字 转 字符串|\n|Number( string )|字符串 转 数字|\n",
  "### **Math** [数学](http://www.w3school.com.cn/jsref/jsref_obj_math.asp)\n\n|属性|说明|举栗|\n|:---|:---|:---|\n|floor( x )|返回 <= x 整数 向下取整|( -2.1 )  = -3|\n|ceil( x ) |返回 >= x 整数 向上取整|( -2.1 )  = -2|\n|round( x )|返回 x 四舍五入|( 5.4 )  = 5|\n|abs( x )  |返回 x 绝对值|\n|random( ) |生成 0 - 1 随机小数|\n",
  "### **Range** 遍历\n```javascript\nvar range = function( n ) {\n    var list = []\n    for (var i = 1; i < n + 1; i++) {\n        list.push( i )\n    } return list\n}\n//举例 range(5) = [1, 2, 3, 4, 5]\n```",
  "### **Filter** 过滤器\n```javascript\nvar filter = function( def, iterable ) {\n    var list = []\n    for(var i = 0; i < iterable.length; i++) {\n        var a = iterable[i]\n        if ( def( a ) ){\n            list.push(a)\n        }\n    } return list\n}\n//举例：\n//var oshu = function( x ) { return x % 2 == 0 }\n//filter( oshu, range( 10 )) = [2, 4, 6, 8, 10]\n```",
  "### **Date** [日期组件](http://www.w3school.com.cn/jsref/jsref_obj_date.asp)\n\n中国传统日历（农历） + 节气 + **十二时辰制**\n\n例：丁酉年　三月廿四　谷雨　亥时二刻　，\n\n|民间|备注|对应|\n|:---:|:---:|:---:|\n|刹那||1s|\n|弹指|十刹那|10s|\n|分|十弹指|60s|\n|炷香|五分|5mins|\n|盏茶|两炷香|10mins|\n|刻||14.4mins ≈ 15mins|\n|时辰|八刻|2h|\n|日|十二时辰|1day\n|**佛教**|**备注**|**对应**\n|念||0.018s\n|瞬|二十念|0.36s\n|弹指|二十瞬|7.2s\n|罗预|二十弹指|144s\n|须臾|二十罗预|48mins\n|日|三十须臾|1days\n|候|五日|5days\n|节|三候|15days\n|气|六节|3mons\n|岁|四气|1year\n|小运|五岁|5years\n|大运|十岁|10years\n|极|三十岁|30years\n|甲子|轮回|60years\n",
  "```javascript\nvar time = function( z ) {\n    if (z === undefined) { z = new Date() }\n    var x = z.toString()\n    var zh     = '天一二三四五六'\n    var Year   = x.slice(11,15)\n    var Month  = z.getMonth() + 1\n    var Day    = x.slice(8,10)\n    var Hour   = x.slice(16,18)\n    var Minute = x.slice(19,21)\n    var Second = x.slice(22,24)\n    var Week   = zh[ z.getDay() ]\n    if ( String(Month).length === 1) {\n        Month = '0' + Month\n    }\n    return `${Year}年${Month}月${Day}日 ${Hour}时${Minute}分${Second}秒 星期${Week}`\n}\ntime( ) //载入时间对象 否则为当前时间\n```",
  "### **Prime** 素数\n```javascript\nvar prime = function(n) {\n    var range = function( a, b ) {\n        var list = []\n        for (var i = a; i < b; i++) {\n            list.push( i )\n            } return list\n        } // 修改 range 遍历\n    var num = range( 0, n + 1 )\n    for (i of range( 2, n + 1 )) {\n        if ( num[i] === 0 ) {\n            continue\n        }\n        for (k of num.slice( i + 1)) {\n            if ( k % i === 0 ) {\n                num[k] = 0\n            }\n        }\n    }\n    sub = num.slice(2) // 素数 >= 2\n    var noZero = function( x ) { return x != 0 }\n    return filter( noZero, sub ) //Filter 过滤器\n} //举例 prime(10) = [2, 3, 5, 7]\n```\n",
  "### **ClassOFF** 开关\n```javascript\nvar ClassOFF = function( fu, CalssName ) {\n    var Class = fu.classList\n    if( Class.contains( CalssName ) ) {      //如果 包含\n        Class.remove  ( CalssName )          //删除\n    } else {\n        Class.add     ( CalssName )          //添加\n    }\n} // 备注：CalssName = CSS样式\n```",
  "### **CkXian** 参考线\n```javascript\nvar ckXian = function() {\n    var body  = document.querySelector('body')\n    var style ='<style id=\"xm\" media=\"screen\"> * {outline: 1px red dashed!important} </style>'\n    var i = false\n    body.addEventListener('keydown', function(event) {\n        if (event.keyCode === 77 && event.ctrlKey) {\n            if (i) {\n                var styletog = document.querySelector('#xm')\n                styletog.remove()\n                i = false\n            } else {\n                body.insertAdjacentHTML('afterbegin', style)\n                i = true\n            }\n        }\n    })\n}() // 加载代码 使用 Ctrl + M 显示参考线\n```\n",
  "# **jQuery**\n\n### 常用\n\n|选择器||\n|:---|:---|\n|\\$( `'.class'` )|匹配所有 符合[元素](#选择器) 返回 数组|\n|\\$( `'*'` )|全部匹配|\n|\\$( `' #id, .class ,div '`)|组选择|\n",
  "\n|**jQuery 对象 方法**||\n|:---|:---|\n|find(  `'#id'` ) |查找 元素|\n|cloest( `'.class'` )|查找 父元素（一直向上 找到为止）|\n|parent()|查找 父元素|\n|children()|查找 子元素|\n|parent().children()|查找 父子元素|\n|siblings()|查找 父子元素（除过 自己）|\n|**jQuery 对象 操作**||\n|remove()|删除|\n|empty()|删除（除过 自己）|\n|show()|显示|\n|hide()|隐藏|\n|toggle()|开关|\n\n|**HTML 操作**||\n|:---|:---|\n|append( )|末尾|\n|prepend( )|开头|\n|before( )|之前|\n|after( )|之后|",
  "### **JQ** [属性操作](http://www.w3school.com.cn/jquery/jquery_ref_attributes.asp)\n|**Class**||\n|:---|:---|\n|hasClass( `\".className\"` )|查询 返回 ture 或 false|\n|addClass( `\".className\"` )|添加|\n|removeClass( `\".className\"` )|删除|\n|toggleClass( `\".className\"` )|开关|\n|**属性**||\n|attr( `\"name\"`, `\"bigc\"` )|赋值|\n|removeAttr( `\"name\"`, `\"bigc\"` )|移除|\n|**取值**||\n|val()|**input** 标签 专属|\n|text( )|格式化 文本（有参数则为赋值）|\n|html( )|返回 字符串（有参数则为赋值）|\n",
  "### **jQ** 事件绑定\n```javascript\nvar Event = function( ) {\n    $('.tanChuang').remove()\n}\n```\n```javascript\n$( '#id-tan-OK' ).on( 'click', Event )\n// 绑定 元素 #id-button-add\n```\n",
  "### **jQ** 事件委托\n```javascript\nvar Event = function( event ) {\n    var button = $( event.target )          // 获取 目标\n    var fu = button.cloest( '.notePad_one' )// 获取 父元素\n    fu.remove()                             // 删除 父元素\n}\n```\n```javascript\n$( '#id-div-cont' ).on( 'click', '.del', Event )\n// 绑定 父元素 #id-div-cont 监听 .del\n```\n",
  "\n### **jQ** **each** 数组遍历\n\n参数：`index` 和 `element`\n```javascript\nvar eve = function(i, e) {\n    console.log(i, e)\n}\n$('.notePad_one').each( eve )\n```",
  "### **jQ** **map** 遍历\n```javascript\nvar a = [1, 2, 3, 4, 5]\nvar eve = function( i ) {\n    return i * i\n}\nvar b = $.map( a, eve )\n// 结果 b = [1, 4, 9, 16, 25]\n```",
  "### **jQ** **filter** 过滤器\n```javascript\nvar a = [1, 2, 3, 4, 5]\nvar eve = function( i ) {\n    return i % 2 == 1\n}\nvar b = $.grep( a, eve )\n// 结果 b = [1, 3, 5]\n```\n",
  "### **jQ** **Ajax**\n```javascript\n$.ajax({\n    url: '/data/all',\n    type: 'GET',\n    success: function(data) {\n        console.log(data)\n    },\n    error: function() {\n        console.log('Error:', arguments)\n    }\n})\n```\n\n```javascript\n$.ajax({\n    url: '/data/save',\n    type: 'POST',\n    data: sendData, // 发送 Object \n    success: function(e) {\n        console.log(e)\n    },\n    error: function() {\n        console.log('Error:', arguments)\n    }\n})\n```",
  "### **jQ** **Data** 数据\n\n```javascript\n<div id=\"demo\" data-id='101' data-dudu='嘟嘟嘟'>\n\n$('#demo')[0].dataset.id\n// '101'\n$('#demo')[0].dataset.dudu\n// '嘟嘟嘟'\n```",
  "# **Node.js**\n\n### [vultr](https://www.vultr.com/)\n\n- 购买 Tokyo Ubuntu 16.10 x64\n- 安装 Bitvise SSH Client\n1. **Server**\nhost : `IP地址` 或 `域名A记录解析到IP`\nPort : 22\n2. **Authentication**\nUsername : root \nPassword : \\*\\*\\*\\*\\*\\*\n3. **Login** 弹出命令框\n[**root**](http://bbs.qcloud.com/thread-24707-1-1.html)\n切换 `$ sudo su root`\n改密 `$ sudo passwd root`\n修改 ssh 配置 `nano /etc/ssh/sshd_config`\nProtocol 2 下面加一行 `PermitRootLogin yes` Ctrl + O 保存；Ctrl + X 退出\n重启 ssh `$ sudo service ssh restart`\n。--------------------------\n**node**\n`$ apt install nodejs-legacy`\n[**yarn**](https://yarnpkg.com/zh-Hans/docs/install#linux-tab)\n配置仓库\n`$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list`\n安装\n`$ apt-get update && sudo apt-get install yarn`\n镜像源\n`$ yarn config set registry https://registry.npm.taobao.org`\n**npm**\n`$ apt install npm`\n`$ npm install -g cnpm --registry=https://registry.npm.taobao.org`\n**express**\n`$ yarn add express`\n**body-parser**\n`$ yarn add body-parser`\n[**forever**](http://blog.csdn.net/jbboy/article/details/35281225)\n`$ cnpm install -g forever`",
  "\n# **Nginx** 反向代理\n\n原文：大香蕉bigbananas.cn [文章地址](http://bigbananas.cn/2017/02/18/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86)\n\n1. 安装 NGINX\n\n    `$ apt-get install nginx`\n\n2. 修改 NGINX 的配置文件 /etc/nginx/nginx.conf\n    具体为:修改配置文件中 的 http{ }\n    在 http{ } 中的末尾补上反向代理配置代码\n```\n##\n# 反向代理\n##\n\n# 配置 bigc.cc\nserver {\n\tlisten 443;\n\tserver_name bigc.cc;\n\t\n\t# SSL证书\n\tssl on;\n\tssl_certificate 1_bigc.cc_bundle.crt;\n\tssl_certificate_key 2_bigc.cc.key;\n\tssl_session_timeout 5m;\n\tssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n\tssl_prefer_server_ciphers on;\n\n\tlocation / {\n\t\t# 代理地址\n\t\tproxy_pass http://127.0.0.1:1207/;\n\n\t\tproxy_read_timeout 300;\n\t\tproxy_connect_timeout 300;\n\t\tproxy_redirect     off;\n\t\tproxy_set_header   X-Forwarded-Proto $scheme;\n\t\tproxy_set_header   Host              $http_host;\n\t\tproxy_set_header   X-Real-IP         $remote_addr;\n\t}\n}\n# 重定向\nserver {\n\tlisten 80;\n\trewrite ^(.*) https://$host$1 permanent;\n}\n# 配置 me.bigc.cc\nserver {\n    listen 80;\n    server_name me.bigc.cc;\n    location / {\n\t\t# 代理地址\n        proxy_pass http://127.0.0.1:8081/;\n\n        proxy_read_timeout 300;\n        proxy_connect_timeout 300;\n        proxy_redirect     off;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n        proxy_set_header   Host              $http_host;\n        proxy_set_header   X-Real-IP         $remote_addr;\n    }\n}\n# 你皮任你皮 我当你瓜皮\n# 出错可以重来 apt-get --purge remove nginx-common\n```\n\n3.  在重启 NGINX 服务\n    `$ nginx -s reload`\n",
  "## Shadowsocks\n> http://www.jianshu.com/p/b5c4fbadbfae\n```\n$ apt-get update\n$ apt-get install python-pip\n$ pip install setuptools\n$ pip install shadowsocks\n$ nano /etc/shadowsocks.json\n{\n \"server\": \"81.77.16.127\",\n \"server_port\": 8388,\n \"local_address\": \"127.0.0.1\",\n \"local_port\": 1080,\n \"password\": \"password\",\n \"method\": \"aes-256-cfb\",\n \"fast_open\": true,\n \"timeout\":300\n}\n$ ssserver -c /etc/shadowsocks.json -d stop\n$ ssserver -c /etc/shadowsocks.json -d start\n```",
  "## express\n```javascript\n//express_demo.js 文件\nvar express = require('express');\nvar app = express();\n\n// 安装 $ npm install body-parser\nvar bodyParser = require('body-parser')\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n// 配置 body-Parser\n\napp.use(express.static('public'))\n// 公共 文件\n\napp.get('/', function(req, res) {\n    var sendFile = function(path, res) {\n        var fs = require('fs')\n        fs.readFile(path, {encoding: 'utf-8'}, function(err, data) {\n            if (err) {\n                console.log('错误', err)\n            } else {\n                res.send(data)\n            }\n        })\n    }\n    var path = 'index.html'\n    sendFile(path, res)\n})\n// 读取 文件\n\napp.get('/todo/all', function(req, res) {\n    var sendFile = function(path, res) {\n        var fs = require('fs')\n        fs.readFile(path, {encoding: 'utf-8'}, function(err, data) {\n            if (err) {\n                console.log('错误', err)\n            } else {\n                res.send(data)\n            }\n        })\n    }\n    var path = 'data'\n    sendFile(path, res)\n})\n// 读取 数据\n\napp.post('/todo/save', function (req, res) {\n    var data = JSON.stringify(req.body)\n    var fs = require(\"fs\");\n    fs.writeFile('data', data, function (err) {\n        if (err) {\n              res.send('错误！')\n        } else {\n              res.send('POST 数据已保存')\n        }\n   })\n})\n// 写入 数据\n\nvar server = app.listen(8081, function() {\n    var host = server.address().address\n    var port = server.address().port\n \n   console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n})\n```\n\n> 输入 `$ node express_demo.js ` 运行服务器",
  "# **DEBUG**\n\n### log 大法 / ensure 测试\n\n```javascript\nvar log = function() {\n    console.log.apply(console, arguments)\n    }\n    //定义自己的log很重要\n    //\"你好 ${0}\".to('大香蕉')\nString.prototype.to = function(){\n    var args = arguments\n    return this.replace(/\\$\\{(\\d+)\\}/g,function(s,i){\n        return args[i]\n    })\n}\n    // enSure增强进化版 穿衣服\nvar ensure = function( def, result, message ) {\n    if( JSON.stringify( def ) !== JSON.stringify( result ) ) {\n        log('异常————————————>', message)\n        log('def    = \"'+def+'\"\\nresult = \"'+result+'\"')\n        }\n    }\n//测试 函数返回值 是否等于 结果(手工计算) 否则 报错\n//举例：\nvar sum = function(a, b) {\n    return a + b\n}\nensure( sum(3, 3) ,5 ,'sum错误' )\n```\n> 参数未知：log( **arguments** )　/　事件未知：log( **event.target** )\n",
  "# 参数说明\n\n|名称|秒懂释义|\n|:---|:---    |\n|function|函数|\n|object|对象|\n|iterable|可迭代对象|\n|path|路径|\n|url|网址|\n|pattern|[正则表达式](#regexp-正则表达式)|\n|string|字符串|\n|property|属性|\n|event|[事件](#event)|\n",
  "# 注释\n\n|注释|快捷键 CTRL + /|单行|\n|:---:|:---:|:---:|\n|JavaScript||`//` JS|\n|CSS|`/*` CSS `*/`|\n|HTML|`<!--` HTML `-->`|\n|Python|` ``` ` Python ` ``` `|`#` Python|",
  "参考资料：[MDN](https://developer.mozilla.org/cn/) / [w3school](http://www.w3school.com.cn) / [jQuery](http://cdn.bootcss.com/jquery/3.1.1/jquery.js) / [Pure](http://purecss.io) / [Bootstrap](http://getbootstrap.com)  / [储瓜间](http://vip.cocode.cc/chest/shared/1859)\n\n相关链接：[少杰笔记](https://www.zybuluo.com/Jason1992/note/512575) / [CSS笔记](https://www.zybuluo.com/miniroadrunner/note/532832) / [BIGC-HUB](https://github.com/BIGC-HUB)",
  "\n> \n**Atom** 字体 **Consolas**\n**Atom** 汉化插件 **simplified-chinese-menu**"
]